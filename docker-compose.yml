version: "3.8"

networks:
  my_network:
    driver: bridge

services:

  kafka:
    image: confluentinc/cp-kafka:6.0.14
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    networks:
      - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my_network


  # kafka-topic-creator:
  #   image: wurstmeister/kafka:2.13-2.7.0
  #   command: >
  #     bash -c "
  #     sleep 10 &&
  #     kafka-topics --create --topic topic1 --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
  #     "
  #   depends_on:
  #     - kafka
  #   networks:
  #     - my_network

  # redis:
  #   image: "redis:latest"
  #   command: ["redis-server", "--maxmemory", "1g"]
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - my_network

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
        - '${FORWARD_MAILHOG_PORT:-1025}:1025'
        - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
        - my_network

  jobp:
    build:
      context: ./jobp
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - 8000:8000
    volumes:
      - jobp:/app/data  # Adjust the volume path as needed
    command: 'php artisan serve --host=0.0.0.0 --port=8000'
    networks:
      - my_network


  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf  # Mount your custom nginx configuration file
  #   depends_on:
  #     - jobp
  #   networks:
  #     - my_network

  email_go:
    build:
      context: ./email_go
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - email-go:/app/data  # Adjust the volume path as needed
    ports:
      - 8001:8001
    networks:
      - my_network

volumes:
  jobp:
  email-go:
